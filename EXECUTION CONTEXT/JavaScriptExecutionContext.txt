Java Execution Context

{code} --> Global Execution Context <---- refere this keyword
value of keyword "This" --> window
java script is a single threaded

Execution Context

---> Global Execution Context
---> Functional Execution Context
---> Eval Execution Context

{code}  -> Memory Creation Phase {Memory allocation for variable etc}
        -> Execution Phase {}


        let val1 = 10;
        let val2 = 5;
        funciton addNum(num1,num2){
            let total = num1+num2;
            return total;
        }
        let result1 = addNum(val1,val2);
        let result2 = addNum(10,2);


1.  Global Execution Phase --> this

2.  Memory Phase --> 
            val1 --> undefined
            val2 --> undefined
            addNum --> defination
            result1 --> undefined
            result2 --> undefined

3.  Execution Phase -->
            val1 <-- 10
            val2 <-- 5
            addNum --> new variable environment + Execution thread 
                1.  Memory Phase --> val1 --> undefined
                                     val2 --> undefined 
                                     total --> undefined
                2.  Execution Phase --> num1 --> 10
                                        num2 --> 5
                                        total --> 15 --> return in Global Execution Context

                                    {Delete after Execution}

Call Stack

function one(){
    console.log("One")
    two()
}
function two() {
    console.log("two")
    three()
}
function three() {
    console.log("three")   
}

one()
two()
three()

